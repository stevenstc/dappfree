{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","deposit","bind","componentDidMount","Utils","window","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","getElementById","value","amount","sponsor","tarifa","send","shouldPollResponse","callValue","render","className","type","id","placeholder","onClick","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","call","esto","setState","parseInt","Investors","_hex","Invested","RefRewards","data-toggle","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","trx","getAccount","mydireccion","address","fromHex","investors","MYwithdrawable","My","style","text","data-wow-duration","color","data-wow-delay","TronLinkInfo","accountAddress","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.a05b2fed.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato ac√° ///////////////////////////////////\r\nconst contractAddress = \"TV1R4Vqw3eiabXfaYB42YAeadXYSzXwcwt\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        if (get['capital']) {\r\n          document.getElementById('tarifa').value = 1;\r\n          document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }else{\r\n          if (get['ref'].length === 34) {\r\n            document.getElementById('tarifa').value = 0;\r\n            document.getElementById('sponsor').value = get['ref'];            \r\n          }else{\r\n            document.getElementById('tarifa').value = 0;\r\n             document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n          }\r\n        }\r\n        \r\n    }else{\r\n        document.getElementById('tarifa').value = 0;\r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    let tarifa = document.getElementById(\"tarifa\").value;\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n  \r\n    return Utils.contract.deposit(tarifa, sponsor).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n          <i className=\"fa fa-diamond\"></i>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Gold Premium</h5>\r\n          <h6 className=\"card-text\">\r\n            Return: <strong>200%</strong><br></br>\r\n            <strong>2%</strong> per day<br></br>\r\n          </h6>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 200 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~3 TRX para hacer la transacci√≥n</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.deposit()}>Invertir</button>\r\n          \r\n        </div>\r\n      </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-12 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversi√≥n para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversi√≥n para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header className=\"section-header\">\r\n          <h3>Mi Oficina: <br></br>\r\n          {direccion}</h3><br></br>\r\n          <h6 style={{'text-align': 'center'}}><a href={link}>{link}</a>&nbsp;\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{invested} TRX</a></h4>\r\n              <p className=\"description\">Total invertido</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\r\n              <p className=\"description\">Total ganancias por referidos</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Mi balance</p>\r\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Balance por referidos</p>\r\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\r\n              <p className=\"description\">{balanceRef+my} TRX <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Retirar</button></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\r\n              <p className=\"description\">{withdrawn} TRX</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    this.fetchAccountAddress();\r\n    this.fetchAccountBalance();\r\n    this.fetchAccountBandwidth();\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth,} = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n            <i className=\"fa fa-address-card-o\"></i>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Informaci√≥n de la cuenta</h5>\r\n            <h6 className=\"card-text\">\r\n              Direcci√≥n:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='logo col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='tronLink row' onClick={ openTronLink }>\r\n                <div className='info col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink row' onClick={ openTronLink }>\r\n            <div className='info col-xs-12 col-md-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return <TronLinkGuide />;\r\n\r\n    if (!this.state.tronWeb.loggedIn) return <TronLinkGuide installed />;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <section id=\"why-us\" className=\"wow fadeIn\">\r\n            <div className=\"container\">\r\n              <header className=\"section-header\">\r\n                  <h3>Has tu inversi√≥n</h3>\r\n              </header>\r\n              <div  className=\"row row-eq-height justify-content-center\">\r\n                <CrowdFunding />\r\n                <TronLinkInfo />\r\n              </div>\r\n              <div >\r\n                <Datos />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section id=\"services\" className=\"section-bg\">\r\n            <Oficina /> \r\n          </section>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}